package views

import (
	"github.com/zeindevs/goshadcn/ui"
)

templ Index(title string) {
	@Layout(title) {
		<header class="py-20">
			<div class="container max-w-5xl px-8 text-center flex flex-col gap-5">
				<h1 class="text-3xl lg:text-4xl font-bold">{ title }</h1>
				<p class="text-base lg:text-lg text-muted-foreground">shadcn/ui components in golang templ</p>
			</div>
		</header>
		<div class="py-12 space-y-5 px-5">
			<section id="button" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Button</h3>
				<div class="flex gap-3 flex-wrap">
					<button { ui.Button(ui.Class("w-fit"))... }>
						Primary
					</button>
					<button { ui.Button(ui.ButtonVariant("secondary"), ui.Class("w-fit"))... }>
						Secondary
					</button>
					<button { ui.Button(ui.ButtonVariant("destructive"), ui.Class("w-fit"))... }>
						Destructive
					</button>
					<button { ui.Button(ui.ButtonVariant("outline"), ui.Class("w-fit"))... }>
						Outline
					</button>
					<button { ui.Button(ui.ButtonVariant("ghost"), ui.Class("w-fit"))... }>
						Ghost
					</button>
					<a href="#button" { ui.Button(ui.ButtonVariant("link"), ui.Class("w-fit"))... }>
						Link
					</a>
				</div>
				<div class="flex gap-3 flex-wrap">
					<button { ui.Button(ui.ButtonVariant("primary", "sm"), ui.Class("w-fit"))... }>
						Primary Small
					</button>
					<button { ui.Button(ui.ButtonVariant("secondary", "sm"), ui.Class("w-fit"))... }>
						Secondary Small
					</button>
					<button { ui.Button(ui.ButtonVariant("destructive", "sm"), ui.Class("w-fit"))... }>
						Destructive Small
					</button>
					<button { ui.Button(ui.ButtonVariant("outline", "sm"), ui.Class("w-fit"))... }>
						Outline Small
					</button>
					<button { ui.Button(ui.ButtonVariant("ghost", "sm"), ui.Class("w-fit"))... }>
						Ghost Small
					</button>
					<a href="#button" { ui.Button(ui.ButtonVariant("link", "sm"), ui.Class("w-fit"))... }>
						Link Small
					</a>
				</div>
				<div class="flex gap-3 flex-wrap">
					<button { ui.Button(ui.ButtonVariant("primary", "lg"), ui.Class("w-fit"))... }>
						Primary Large
					</button>
					<button { ui.Button(ui.ButtonVariant("secondary", "lg"), ui.Class("w-fit"))... }>
						Secondary Large
					</button>
					<button { ui.Button(ui.ButtonVariant("destructive", "lg"), ui.Class("w-fit"))... }>
						Destructive Large
					</button>
					<button { ui.Button(ui.ButtonVariant("outline", "lg"), ui.Class("w-fit"))... }>
						Outline Large
					</button>
					<button { ui.Button(ui.ButtonVariant("ghost", "lg"), ui.Class("w-fit"))... }>
						Ghost Large
					</button>
					<a href="#button" { ui.Button(ui.ButtonVariant("link", "lg"), ui.Class("w-fit"))... }>
						Link Large
					</a>
				</div>
			</section>
			<section id="button-icon" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Button Icon</h3>
				<div class="flex gap-3 flex-wrap">
					<button { ui.Button(ui.ButtonVariant("primary", "icon"))... }>
						@ui.IconMoon("h-5 w-5")
					</button>
					<button { ui.Button(ui.ButtonVariant("secondary", "icon"))... }>
						@ui.IconMoon("h-5 w-5")
					</button>
					<button { ui.Button(ui.ButtonVariant("destructive", "icon"))... }>
						@ui.IconMoon("h-5 w-5")
					</button>
					<button { ui.Button(ui.ButtonVariant("outline", "icon"))... }>
						@ui.IconMoon("h-5 w-5")
					</button>
					<button { ui.Button(ui.ButtonVariant("ghost", "icon"))... }>
						@ui.IconMoon("h-5 w-5")
					</button>
					<a href="#button-icon" { ui.Button(ui.ButtonVariant("link", "icon"))... }>
						@ui.IconMoon("h-5 w-5")
					</a>
				</div>
				<div class="flex gap-3 flex-wrap">
					<button { ui.Button(ui.ButtonVariant("primary"), ui.Class("w-fit"))... }>
						@ui.IconMoon("mr-2 h-5 w-5")
						Primary With Icon
					</button>
					<button { ui.Button(ui.ButtonVariant("secondary"), ui.Class("w-fit"))... }>
						@ui.IconMoon("mr-2 h-5 w-5")
						Secondary With Icon
					</button>
					<button { ui.Button(ui.ButtonVariant("destructive"), ui.Class("w-fit"))... }>
						@ui.IconMoon("mr-2 h-5 w-5")
						Destructive With Icon
					</button>
					<button { ui.Button(ui.ButtonVariant("outline"), ui.Class("w-fit"))... }>
						@ui.IconMoon("mr-2 h-5 w-5")
						Outline With Icon
					</button>
					<button { ui.Button(ui.ButtonVariant("ghost"), ui.Class("w-fit"))... }>
						@ui.IconMoon("mr-2 h-5 w-5")
						Ghost With Icon
					</button>
					<a href="#button-icon" { ui.Button(ui.ButtonVariant("link"), ui.Class("w-fit"))... }>
						@ui.IconMoon("mr-2 h-5 w-5")
						Link With Icon
					</a>
				</div>
				<div class="flex gap-3 flex-wrap">
					<button disabled { ui.Button(ui.ButtonVariant("primary"), ui.Class("w-fit"))... }>
						@ui.IconRotateCW("mr-2 h-5 w-5 animate-spins")
						Primary With Loading
					</button>
					<button disabled { ui.Button(ui.ButtonVariant("secondary"), ui.Class("w-fit"))... }>
						@ui.IconRotateCW("mr-2 h-5 w-5 animate-spins")
						Secondary With Loading
					</button>
					<button disabled { ui.Button(ui.ButtonVariant("destructive"), ui.Class("w-fit"))... }>
						@ui.IconRotateCW("mr-2 h-5 w-5 animate-spins")
						Destructive With Loading
					</button>
					<button disabled { ui.Button(ui.ButtonVariant("outline"), ui.Class("w-fit"))... }>
						@ui.IconRotateCW("mr-2 h-5 w-5 animate-spins")
						Outline With Loading
					</button>
					<button disabled { ui.Button(ui.ButtonVariant("ghost"), ui.Class("w-fit"))... }>
						@ui.IconRotateCW("mr-2 h-5 w-5 animate-spins")
						Ghost With Loading
					</button>
					<a data-disabled="true" href="#button-icon" { ui.Button(ui.ButtonVariant("link"), ui.Class("w-fit"))... }>
						@ui.IconRotateCW("mr-2 h-5 w-5 animate-spins")
						Link With Loading
					</a>
				</div>
			</section>
			<section id="alert" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Alert</h3>
				<div class="grid gap-3 grid-cols-2">
					<div>
						@ui.Alert(ui.AlertProps{
							Title:   "Alert",
							Variant: "default",
							Message: "Message",
						})
					</div>
					<div>
						@ui.Alert(ui.AlertProps{
							Title:   "Alert",
							Variant: "destructive",
							Message: "Message",
						})
					</div>
				</div>
			</section>
			<section id="badge" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Badge</h3>
				<div class="flex gap-3 flex-wrap">
					<span { ui.Badge(ui.BadgeVariant("primary"))... }>Primary</span>
					<span { ui.Badge(ui.BadgeVariant("secondary"))... }>Secondary</span>
					<span { ui.Badge(ui.BadgeVariant("destructive"))... }>Destructive</span>
					<span { ui.Badge(ui.BadgeVariant("outline"))... }>Outline</span>
				</div>
			</section>
			<section id="accordion" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Accordion</h3>
				<div class="">
					@ui.Accordion() {
						@ui.AccordionItem(ui.AccordionItemProps{
							Title:       "s it accessible?",
							TriggerIcon: ui.IconChevronDown,
						}) {
							<p>"Yes. It adheres to the WAI-ARIA design pattern."</p>
						}
						@ui.AccordionItem(ui.AccordionItemProps{
							Title:       "Is it animated?",
							TriggerIcon: ui.IconChevronDown,
						}) {
							<p>"Yes. It's animated by default, but you can disable it if you prefer."</p>
						}
						@ui.AccordionItem(ui.AccordionItemProps{
							Title:       "Is it styled?",
							TriggerIcon: ui.IconChevronDown,
						}) {
							<p>"Yes. It comes with default styles that matches the other components' aesthetic."</p>
						}
					}
				</div>
			</section>
			<section id="card" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Card</h3>
				<div class="flex gap-3 flex-wrap">
					@ui.Card("w-[350px]") {
						@ui.CardHeader() {
							<div class="space-y-2">
								@ui.CardTitle("Create project")
								@ui.CardDescription("Deploy your new project in one-click.")
							</div>
						}
						@ui.CardBody() {
							Body
						}
						@ui.CardFooter("items-center flex justify-between") {
							<button { ui.Button(ui.ButtonVariant("outline"), ui.Class("w-fit"))... }>
								Cancel
							</button>
							<button { ui.Button(ui.ButtonVariant("primary"), ui.Class("w-fit"))... }>
								Deploy
							</button>
						}
					}
				</div>
			</section>
			<section id="input" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Input</h3>
				<div class="grid md:grid-cols-2 gap-3">
					<div class="grid w-full items-center gap-1.5">
						<input { ui.Input()... } placeholder="Email"/>
					</div>
					<div class="flex w-full items-center space-x-2">
						<input type="email" { ui.Input()... } placeholder="Email"/>
						<button type="submit" { ui.Button()... }>Subscribe</button>
					</div>
					<div class="grid w-full items-center gap-1.5">
						@ui.Label("email", "Email Address")
						<input { ui.Input()... } placeholder="Email"/>
					</div>
					<div class="grid w-full items-center gap-1.5">
						@ui.Label("picture", "Picture")
						<input id="picture" type="file" { ui.Input()... }/>
					</div>
				</div>
			</section>
			<section id="checkbox" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Checkbox</h3>
				<div class="grid md:grid-cols-2 gap-3">
					<div class="flex items-center space-x-2">
						@ui.Checkbox("terms1", false)
						@ui.CheckboxLabel("terms1", "Accept terms and conditions")
					</div>
					<div class="items-top flex space-x-2">
						@ui.Checkbox("terms2", false)
						<div class="grid gap-1.5 leading-none">
							@ui.CheckboxLabel("terms2", "Accept terms and conditions")
							<p class="text-sm text-muted-foreground">
								You agree to our Terms of Service and Privacy Policy.
							</p>
						</div>
					</div>
					<div class="flex items-center space-x-2">
						@ui.Checkbox("terms3", true)
						@ui.CheckboxLabel("terms3", "Accept terms and conditions")
					</div>
				</div>
			</section>
			<section id="avatar" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Avatar</h3>
				<div class="flex gap-3">
					@ui.Avatar("", "CN")
					@ui.Avatar("/static/avatar.jpeg", "CN")
				</div>
			</section>
			<section id="textarea" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Textarea</h3>
				<div class="flex flex-col gap-3">
					<div class="grid w-full gap-1.5">
						<textarea id="textarea1" { ui.Textarea()... } placeholder="Type your message here."></textarea>
					</div>
					<div class="grid w-full gap-1.5">
						@ui.Label("textarea2", "Your Message")
						<textarea id="textarea2" { ui.Textarea()... } placeholder="Type your message here."></textarea>
						<p class="text-sm text-muted-foreground">
							Your message will be copied to the support team.
						</p>
					</div>
				</div>
			</section>
			<section id="dropdown" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Dropdown</h3>
				<div class="flex gap-3">
					@ui.Dropdown() {
						<button @click="dropdownOpen=true" { ui.Button(ui.Class("w-fit"))... }>
							Dropdown Left
						</button>
						@ui.DropdownContent(ui.DropdownProps{
							Side: "left",
						}) {
							<span { ui.DropdownLabel()... }>Account</span>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Settings
								@ui.DropdownShortcut("⌘S")
							</button>
							<button { ui.DropdownItem()... }>
								Keyboard Shortcut
								@ui.DropdownShortcut("⌘K")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Team</button>
							<button { ui.DropdownItem()... }>
								Invite Users
								@ui.DropdownChevron()
							</button>
							<button { ui.DropdownItem()... }>
								New Team
								@ui.DropdownShortcut("⇧⌘+T")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Github</button>
							<button { ui.DropdownItem()... }>Support</button>
							<button data-disabled { ui.DropdownItem()... }>API</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Logout
								@ui.DropdownShortcut("⇧⌘Q")
							</button>
						}
					}
					@ui.Dropdown() {
						<button @click="dropdownOpen=true" { ui.Button(ui.Class("w-fit"))... }>
							Dropdown Right
						</button>
						@ui.DropdownContent(ui.DropdownProps{
							Side: "right",
						}) {
							<span { ui.DropdownLabel()... }>Account</span>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Settings
								@ui.DropdownShortcut("⌘S")
							</button>
							<button { ui.DropdownItem()... }>
								Keyboard Shortcut
								@ui.DropdownShortcut("⌘K")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Team</button>
							<button { ui.DropdownItem()... }>
								Invite Users
								@ui.DropdownChevron()
							</button>
							<button { ui.DropdownItem()... }>
								New Team
								@ui.DropdownShortcut("⇧⌘+T")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Github</button>
							<button { ui.DropdownItem()... }>Support</button>
							<button data-disabled { ui.DropdownItem()... }>API</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Logout
								@ui.DropdownShortcut("⇧⌘Q")
							</button>
						}
					}
					@ui.Dropdown() {
						<button @click="dropdownOpen=true" { ui.Button(ui.Class("w-fit"))... }>
							Dropdown Top Left
						</button>
						@ui.DropdownContent(ui.DropdownProps{
							Side: "topleft",
						}) {
							<span { ui.DropdownLabel()... }>Account</span>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Settings
								@ui.DropdownShortcut("⌘S")
							</button>
							<button { ui.DropdownItem()... }>
								Keyboard Shortcut
								@ui.DropdownShortcut("⌘K")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Team</button>
							<button { ui.DropdownItem()... }>
								Invite Users
								@ui.DropdownChevron()
							</button>
							<button { ui.DropdownItem()... }>
								New Team
								@ui.DropdownShortcut("⇧⌘+T")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Github</button>
							<button { ui.DropdownItem()... }>Support</button>
							<button data-disabled { ui.DropdownItem()... }>API</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Logout
								@ui.DropdownShortcut("⇧⌘Q")
							</button>
						}
					}
					@ui.Dropdown() {
						<button @click="dropdownOpen=true" { ui.Button(ui.Class("w-fit"))... }>
							Dropdown Top Right
						</button>
						@ui.DropdownContent(ui.DropdownProps{
							Side: "topright",
						}) {
							<span { ui.DropdownLabel()... }>Account</span>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Settings
								@ui.DropdownShortcut("⌘S")
							</button>
							<button { ui.DropdownItem()... }>
								Keyboard Shortcut
								@ui.DropdownShortcut("⌘K")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Team</button>
							<button { ui.DropdownItem()... }>
								Invite Users
								@ui.DropdownChevron()
							</button>
							<button { ui.DropdownItem()... }>
								New Team
								@ui.DropdownShortcut("⇧⌘+T")
							</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>Github</button>
							<button { ui.DropdownItem()... }>Support</button>
							<button data-disabled { ui.DropdownItem()... }>API</button>
							@ui.DropdownSeparator()
							<button { ui.DropdownItem()... }>
								Logout
								@ui.DropdownShortcut("⇧⌘Q")
							</button>
						}
					}
				</div>
			</section>
			<section id="tooltio" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Tooltip</h3>
				<div class="flex gap-3">
					@ui.Tooltip() {
						<button { ui.Button(ui.Class("w-fit"))... }>
							Tooltip Right
						</button>
						@ui.TooltipContent(ui.TooltipProps{Title: "Tooltip", Side: "right"})
					}
					@ui.Tooltip() {
						<button { ui.Button(ui.Class("w-fit"))... }>
							Tooltip Left
						</button>
						@ui.TooltipContent(ui.TooltipProps{Title: "Tooltip", Side: "left"})
					}
					@ui.Tooltip() {
						<button { ui.Button(ui.Class("w-fit"))... }>
							Tooltip Top
						</button>
						@ui.TooltipContent(ui.TooltipProps{Title: "Tooltip", Side: "top"})
					}
					@ui.Tooltip() {
						<button { ui.Button(ui.Class("w-fit"))... }>
							Tooltip Bottom
						</button>
						@ui.TooltipContent(ui.TooltipProps{Title: "Tooltip", Side: "bottom"})
					}
				</div>
			</section>
			<section id="switch" class="container max-w-7xl space-y-3">
				<h3 class="text-xl font-medium">Switch</h3>
				<div class="flex gap-3">
					@ui.Switch()
				</div>
			</section>
		</div>
	}
}
